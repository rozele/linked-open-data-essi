<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>edu.esipfed</groupId>
  <artifactId>lord</artifactId>
  <packaging>jar</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>lord</name>
  <description>
  	Earth and Space Science Informatics (ESSI) is inherently multi-disciplinary, requiring 
  	close collaborations between scientists and information technologists. Identifying potential 
  	collaborations can be difficult, especially with the rapidly changing landscape of technologies 
  	and informatics projects. The ability to discover the technical competencies of other researchers 
  	in the community can help in the discovery of collaborations. In addition to collaboration discovery, 
  	social network information can be used to analyze trends in the field, which will help project managers 
  	identify irrelevant, well-established, and emerging technologies and specifications. This information 
  	will help keep projects focused on the technologies and standards that are actually being used, making 
  	them more useful to the ESSI community.

	This project is aimed at developing a code base to address these challenges. We use a Natural Language 
	Processing technique, Named Entity Disambiguation, to extract information about researchers, their 
	affiliations, and technologies from structured text. We develop code that enables encoding the extracted 
	data in the Resource Description Framework, using Linked Data vocabularies including the Semantic Web for 
	Research Communities ontology and the Friend-of-a-Friend ontology.

	Ultimately, this project aims to develop a code base that facilitates a continued pipeline of converting 
	text to Linked Data and exposing the underlying ESSI social network. 
  </description>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
  </properties>
  <scm>
      <connection>http://linked-open-data-essi.googlecode.com/svn/</connection>
  </scm> 
  <url>http://code.google.com/p/linked-open-data-essi/</url>
  <developers>
  	<developer>
  		<id>narock</id>
  		<name>Tom Narock</name>
  		<email>tnarock@marymount.edu</email>
  	</developer>
  	<developer>
  		<id>rozele</id>
  		<name>Eric Rozell</name>
  		<email>rozele@rpi.edu</email>
  	</developer>
  </developers>  
  <repositories>
    <repository>
      <id>maven-repository</id>
      <name>Maven Repository</name>
      <url> http://repo1.maven.org/maven2/</url>
    </repository>
	<repository>
	  <id>maven2-repository.java.net</id>
	  <name>Java.net Repository for Maven</name>
	  <url>http://download.java.net/maven/2/</url>
	  <layout>default</layout>
	</repository>
	<repository>
	  <id>wadl-repository</id>
	  <name>WADL Maven Repository</name>
	  <url>https://wadl.dev.java.net/nonav/repository/</url>
	</repository>
	<repository>
	  <id>maven2-repository.dev.java.net</id>
	  <name>Java.net Repository for Maven</name>
	  <url>http://download.java.net/maven/2/</url>
	</repository>
	<repository>
	  <id>wadl-snapshots</id>
	  <name>WADL Snapshots Repository</name>
	  <url>https://wadl.dev.java.net/nonav/snapshots</url>
	  <snapshots>
	    <enabled>true</enabled>
	  </snapshots>
	  <releases>
	    <enabled>false</enabled>
	  </releases>
	</repository>
	<repository>
	  <id>geocoder-java</id>
	  <url>https://geocoder-java.googlecode.com/svn/mavenrepo</url>
	</repository>
  </repositories>
  <pluginRepositories>
  
    <!-- Maven plugin for license management -->
  	<pluginRepository>
    	<id>mc-release</id>
    	<name>Local Maven repository of releases</name>
    	<url>http://mc-repo.googlecode.com/svn/maven2/releases</url>
    	<snapshots>
        	<enabled>false</enabled>
    	</snapshots>
    	<releases>
        	<enabled>true</enabled>
    	</releases>
	</pluginRepository>
	
	<pluginRepository>
	  <id>maven2-repository.java.net</id>
	  <name>Java.net Repository for Maven</name>
	  <url>http://download.java.net/maven/2/</url>
	  <layout>default</layout>
	  <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <releases>
        <enabled>false</enabled>
      </releases>
	</pluginRepository>
  </pluginRepositories>
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-wadl2java-plugin</artifactId>
      <version>2.4.1</version>
    </dependency>
<!--  
    <dependency>
      <groupId>org.jvnet.ws.wadl</groupId>
      <artifactId>wadl-core</artifactId>
      <version>1.1-SNAPSHOT</version>
    </dependency>
   -->
   
    <dependency>
	 	<groupId>org.jsoup</groupId>
		<artifactId>jsoup</artifactId>
		<version>1.7.2</version>
    </dependency>
   
    <dependency>
    	<groupId>log4j</groupId>
    	<artifactId>log4j</artifactId>
    	<version>1.2.14</version>
    	<type>jar</type>
    	<scope>compile</scope>
    </dependency>
    <dependency>
    	<groupId>commons-cli</groupId>
    	<artifactId>commons-cli</artifactId>
    	<version>1.2</version>
    	<type>jar</type>
    	<scope>compile</scope>
    </dependency>
    <!-- 
    <dependency>
      <groupId>com.google.code.geocoder-java</groupId>
      <artifactId>geocoder-java</artifactId>
      <version>0.7</version>
    </dependency>
	-->
    <dependency>
      <groupId>org.geonames</groupId>
      <artifactId>geonames</artifactId>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>com.hp.hpl.jena</groupId>
      <artifactId>jena</artifactId>
      <version>2.6.4</version>
    </dependency>
    <dependency>
      <groupId>com.hp.hpl.jena</groupId>
      <artifactId>arq</artifactId>
      <version>2.8.8</version>
    </dependency>
  </dependencies>
  <build>
  
    <!-- log4j searches for the properties file under the Maven directory target/classes -->
    <!-- the <resources> statements below tell Maven to copy the log4j properties file -->
    <!-- from the source directory to the targe/classes directory during each build. -->
    <!-- this ensures the build uses the latest version of the properties file and that -->
    <!-- the properties file is included in the svn repository -->
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <includes>
          <include>log4j.properties</include>
        </includes>
      </resource>
    </resources>
    
    <plugins>
    
      <!-- license plugin -->
      <plugin>
        <groupId>com.mycila.maven-license-plugin</groupId>
        <artifactId>maven-license-plugin</artifactId>
        <version>1.9.0</version>
        <configuration>
          <header>resources/header.txt</header>
          <!--  build should fail if license headers are missing -->
          <failIfMissing>true</failIfMissing>
          <!-- apply license checking to project sub-modules -->
          <aggregate>false</aggregate>
          <includes>
            <include>src/**</include>
          </includes>
          <excludes>
            <exclude>resources/**</exclude>
            <exclude>license/**</exclude>
            <exclude>target/**</exclude>
          </excludes>
          <!-- by default this plugin will exclude certain types of files even
               if they are found in the include directories. use this default list? 
               DEFAULT EXCLUDES: http://code.google.com/p/maven-license-plugin/wiki/Configuration#Default_excludes -->
          <useDefaultExcludes>true</useDefaultExcludes>
        </configuration> 
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <encoding>UTF-8</encoding>
          <source>1.5</source>
          <target>1.5</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <configuration>
          <encoding>UTF-8</encoding>
          <source>1.5</source>
          <target>1.5</target>
        </configuration>
      </plugin>
      <plugin>
  			<artifactId>maven-assembly-plugin</artifactId>
  			<configuration>
  				<descriptorRefs>
  					<descriptorRef>jar-with-dependencies</descriptorRef>
  				</descriptorRefs>
  			</configuration>
  			<executions>
          		<execution>
            		<id>make-assembly</id> <!-- this is used for inheritance merges -->
            		<phase>package</phase> <!-- append to the packaging phase. -->
            		<goals>
              			<goal>single</goal> <!-- run once - otherwise jars are created during build phase and again here -->
            		</goals>
          		</execution>
          	</executions>
  		</plugin>
      <!--<plugin>
        <groupId>org.jvnet.ws.wadl</groupId>
        <artifactId>wadl-maven-plugin</artifactId>
        <version>1.1-SNAPSHOT</version>
        <executions>
          <execution>
            <goals>
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <packageName>org.dbpedia.spotlight</packageName>
          <autopackaging>true</autopackaging>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jvnet.ws.wadl</groupId>
        <artifactId>wadl-maven-plugin</artifactId>
        <version>1.1-SNAPSHOT</version>
        <executions>
          <execution>
            <goals>
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <sourceDirectory>src/main/resources</sourceDirectory>
          <packageName>com.yahoo.search</packageName>
          <autopackaging>true</autopackaging>
          <customizations>
            <customization>src/main/resources/binding.xjb</customization>
          </customizations>
        </configuration>
      </plugin>-->
    </plugins>
  </build>
</project>
